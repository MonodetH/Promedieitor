#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  class_ayuda.py
#
from PyQt4 import QtCore, QtGui
from PyQt4.QtCore import SIGNAL, SLOT, pyqtSlot
import sys
from ui_ayuda import Ui_Ayuda

# Se hereda de la clase QtGui.QDialog
class PopAyuda(QtGui.QDialog):
	# Se define el constructor de la clase __init__
	def __init__(self, categoria):
		# Se llama al constructor de la clase padre
		QtGui.QDialog.__init__(self)
		# Se crea la instancia de Ui_Dialog
		self.ventana = Ui_Ayuda()
		self.ventana.setupUi(self)
		self.categoria = categoria
		self.ventana.buttonBox.connect(self.ventana.buttonBox, SIGNAL("accepted()"),self, SLOT("accept()"))
		
		enc = QtCore.QTextCodec.codecForName("UTF-8")
		QtCore.QTextCodec.setCodecForTr(enc)
		QtCore.QTextCodec.setCodecForLocale(enc)
		QtCore.QTextCodec.setCodecForCStrings(enc)
		
		self.generalGeneral = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Promedieitor</h2> <p> Promedieitor es una calculadora de notas sencilla, interactiva y universal enfocada en estudiantes universitarios con la cual se pueden  hacer cálculos y estimaciones rápidamente.<br>  Promedieitor fue desarrollada en Python y PyQt4 por <b>MonodetH</b> y <b>NikoStolich</b> </p> <h3>Interfaz de usuario</h3> <p> Promedieitor tiene una interfaz de usuario (UI) simplista que se basa en la diferenciación entre Evaluaciones y Variables para  separar los datos en bruto de los cálculos. </p> <h3>Evaluaciones</h3> <p> Las evaluaciones son el combustible de Promedieitor, con ellas se alimentan las variables para luego calcular la Nota Final (NF)<br> Tienen una estructura bastante simple: <ul> <li>Nombre: Nombre o preferiblemente abreviación</li> <li>Nota: Valor, entero o decimal de la Evaluación</li> </ul> La mayor característica de las evaluaciones es permiten obtener resultados rápidamente, sin tener que modificar la formula completa,  ni reemplazar cada vez que son requeridas<br> Dos Evaluaciones no deben tener el mismo nombre, en el caso que así sea solo se considerara la primera dentro de los cálculos </p> <h3>Variables</h3> <p>El motor mismo de Promedieitor, son las encargadas de procesar los datos brutos para obtener luego el resultado final, el cual se guarda en la variable mas importante de Promedieitor: <b>NF</b> (nota final)</p> <h4>Estructura</h4> <p>La estructura es un poco mas compleja que las Evaluaciones: <ul> <li>Nombre: al igual que las evaluaciones se prefieren abreviaciones</li> <li>Valor: es el valor que toman luego de ser procesadas</li> <li>Tipo: Hay tres tipos de variables que luego comentaremos</li> <li>Parámetros: la subrutina que dará el valor a la variable, hay una estructura especifica para cada tipo de variable</li> <li>Ponderación: Es el factor por el cual se multiplicara el resultado de la subrutina, obteniendo luego el valor final</li> </ul> </p> <h4>Variable NF</h4> <p>NF es una variable especial. aquí es donde llega el resultado final luego de ser procesado por Promedieitor por lo que esta PROHIBIDO cambiar su nombre </p> <h4>Tipos</h4> <p>Hay tres tipos de variables: <ul> <li>ALGEBRAICA: Ocupada para hacer cálculos básicos como: suma,resta, multiplicación y diccionario</li> <li>PROMEDIO: Calculo algebraico frecuente al sacar promedios: suma_valores/cant_valores</li> <li>CONDICIONAL: El tipo mas complejo de Promedieitor, encargado de evaluar condiciones</li> </ul> </p> <h4>Variable ALGEBRAICA</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [ { +|-|*|/ } Y [...]]</code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>2+3</code><br> <code>C1 + C2</code><br> <code>0.34 * PC - 50   / EX</code><br> </blockquote> un punto importante a tratar es el orden en que se evalúan los operandos. el orden es * -> / -> + -> - , de la misma forma en que los evalúa un humano.<br>  otro punto, aun mas importante es que NO ESTAN PERMITIDOS LOS PARENTESIS de ningún tipo, por lo que se debe reorganizar la ecuación o  definir el paréntesis como otra variable<br>  Por ultimo recuerda NUNCA escribir partir la ecuación con un negativo cuando solo hay uno en toda la ecuación, por ej: <code>-x + y</code>,  en este caso es preferible <code>y - x</code> </p> <h4>Variable PROMEDIO</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [, Y[, ...]]</code></blockquote> donde x e y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>C1,C2,C3</code><br> <code>Lab1 , Lab2</code><br> <code>T1, -T2</code><br> </blockquote> Tan fácil como ves </p> <h4>Variable CONDICIONAL</h4> <p> Los parámetros que recibe tiene son de la forma: <blockquote><code> condicion [&amp; [ condicion]] : valor [, ...][; valor_por_defecto]<br><br> condicion:<br>{ X(espacio){ >|>=|&lt;|&lt;=|==|=|!= }(espacio)Y }  </code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales, siendo ambas (X e Y) las 'variables' comparadas<br>  Si el valor por defecto no es especificado, se asume 0<br>  a continuación algunos ejemplos: <blockquote> <code>NS &lt;= 55:0;NS</code> (reprobación absoluta)<br> <code>NS >= 44 &amp; NS &lt; 55: NFG; NS</code> (nota con global)<br> <code>X &lt; Y: X, X > Y: Y, X == Y: X  </code> ( mínimo de X e Y )<br> <code>X &lt; Y: X; Y </code> ( mínimo de X e Y (compacto))<br> </blockquote> </p> </body> </html>")
		self.evaluaciones = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Evaluaciones</h2> <p> Las evaluaciones son el combustible de Promedieitor, con ellas se alimentan las variables para luego calcular la Nota Final (NF)<br> Tienen una estructura bastante simple: <ul> <li>Nombre: Nombre o preferiblemente abreviación</li> <li>Nota: Valor, entero o decimal de la Evaluación</li> </ul> La mayor característica de las evaluaciones es permiten obtener resultados rápidamente, sin tener que modificar la formula completa,  ni reemplazar cada vez que son requeridas<br> Dos Evaluaciones no deben tener el mismo nombre, en el caso que así sea solo se considerara la primera dentro de los cálculos </p> </body> </html>")
		self.generalVariables = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Variables</h2> <p>El motor mismo de Promedieitor, son las encargadas de procesar los datos brutos para obtener luego el resultado final, el cual se guarda en la variable mas importante de Promedieitor: <b>NF</b> (nota final)</p> <h4>Estructura</h4> <p>La estructura es un poco mas compleja que las Evaluaciones: <ul> <li>Nombre: al igual que las evaluaciones se prefieren abreviaciones</li> <li>Valor: es el valor que toman luego de ser procesadas</li> <li>Tipo: Hay tres tipos de variables que luego comentaremos</li> <li>Parámetros: la subrutina que dará el valor a la variable, hay una estructura especifica para cada tipo de variable</li> <li>Ponderación: Es el factor por el cual se multiplicara el resultado de la subrutina, obteniendo luego el valor final</li> </ul> </p> <h4>Variable NF</h4> <p>NF es una variable especial. aquí es donde llega el resultado final luego de ser procesado por Promedieitor por lo que esta PROHIBIDO cambiar su nombre </p> <h4>Tipos</h4> <p>Hay tres tipos de variables: <ul> <li>ALGEBRAICA: Ocupada para hacer cálculos básicos como: suma,resta, multiplicación y diccionario</li> <li>PROMEDIO: Calculo algebraico frecuente al sacar promedios: suma_valores/cant_valores</li> <li>CONDICIONAL: El tipo mas complejo de Promedieitor, encargado de evaluar condiciones</li> </ul> </p> <h4>Variable ALGEBRAICA</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [ { +|-|*|/ } Y [...]]</code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>2+3</code><br> <code>C1 + C2</code><br> <code>0.34 * PC - 50   / EX</code><br> </blockquote> un punto importante a tratar es el orden en que se evalúan los operandos. el orden es * -> / -> + -> - , de la misma forma en que los evalúa un humano.<br>  otro punto, aun mas importante es que NO ESTAN PERMITIDOS LOS PARENTESIS de ningún tipo, por lo que se debe reorganizar la ecuación o  definir el paréntesis como otra variable<br>  Por ultimo recuerda NUNCA escribir partir la ecuación con un negativo cuando solo hay uno en toda la ecuación, por ej: <code>-x + y</code>,  en este caso es preferible <code>y - x</code> </p> <h4>Variable PROMEDIO</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [, Y[, ...]]</code></blockquote> donde x e y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>C1,C2,C3</code><br> <code>Lab1 , Lab2</code><br> <code>T1, -T2</code><br> </blockquote> Tan fácil como ves </p> <h4>Variable CONDICIONAL</h4> <p> Los parámetros que recibe tiene son de la forma: <blockquote><code> condicion [&amp; [ condicion]] : valor [, ...][; valor_por_defecto]<br><br> condicion:<br>{ X(espacio){ >|>=|&lt;|&lt;=|==|=|!= }(espacio)Y }  </code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales, siendo ambas (X e Y) las 'variables' comparadas<br>  Si el valor por defecto no es especificado, se asume 0<br>  a continuación algunos ejemplos: <blockquote> <code>NS &lt;= 55:0;NS</code> (reprobación absoluta)<br> <code>NS >= 44 &amp; NS &lt; 55: NFG; NS</code> (nota con global)<br> <code>X &lt; Y: X, X > Y: Y, X == Y: X  </code> ( mínimo de X e Y )<br> <code>X &lt; Y: X; Y </code> ( mínimo de X e Y (compacto))<br> </blockquote> </p> </body> </html>")
		self.NF = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Variable NF</h2> <p>NF es una variable especial. aquí es donde llega el resultado final luego de ser procesado por Promedieitor por lo que esta PROHIBIDO cambiar su nombre </p> </body> </html>")
		self.generalTipos = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Tipos de Variable</h2> <p>Hay tres tipos de variables: <ul> <li>ALGEBRAICA: Ocupada para hacer cálculos básicos como: suma,resta, multiplicación y diccionario</li> <li>PROMEDIO: Calculo algebraico frecuente al sacar promedios: suma_valores/cant_valores</li> <li>CONDICIONAL: El tipo mas complejo de Promedieitor, encargado de evaluar condiciones</li> </ul> </p> <h4>Variable ALGEBRAICA</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [ { +|-|*|/ } Y [...]]</code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>2+3</code><br> <code>C1 + C2</code><br> <code>0.34 * PC - 50   / EX</code><br> </blockquote> un punto importante a tratar es el orden en que se evalúan los operandos. el orden es * -> / -> + -> - , de la misma forma en que los evalúa un humano.<br>  otro punto, aun mas importante es que NO ESTAN PERMITIDOS LOS PARENTESIS de ningún tipo, por lo que se debe reorganizar la ecuación o  definir el paréntesis como otra variable<br>  Por ultimo recuerda NUNCA escribir partir la ecuación con un negativo cuando solo hay uno en toda la ecuación, por ej: <code>-x + y</code>,  en este caso es preferible <code>y - x</code> </p> <h4>Variable PROMEDIO</h4> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [, Y[, ...]]</code></blockquote> donde x e y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>C1,C2,C3</code><br> <code>Lab1 , Lab2</code><br> <code>T1, -T2</code><br> </blockquote> Tan fácil como ves </p> <h4>Variable CONDICIONAL</h4> <p> Los parámetros que recibe tiene son de la forma: <blockquote><code> condicion [&amp; [ condicion]] : valor [, ...][; valor_por_defecto]<br><br> condicion:<br>{ X(espacio){ >|>=|&lt;|&lt;=|==|=|!= }(espacio)Y }  </code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales, siendo ambas (X e Y) las 'variables' comparadas<br>  Si el valor por defecto no es especificado, se asume 0<br>  a continuación algunos ejemplos: <blockquote> <code>NS &lt;= 55:0;NS</code> (reprobación absoluta)<br> <code>NS >= 44 &amp; NS &lt; 55: NFG; NS</code> (nota con global)<br> <code>X &lt; Y: X, X > Y: Y, X == Y: X  </code> ( mínimo de X e Y )<br> <code>X &lt; Y: X; Y </code> ( mínimo de X e Y (compacto))<br> </blockquote> </p> </body> </html>")
		self.ALGEBRAICA = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Variable ALGEBRAICA</h2> <p>AGREGAR DESCRIPCION</p> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [ { +|-|*|/ } Y [...]]</code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>2+3</code><br> <code>C1 + C2</code><br> <code>0.34 * PC - 50   / EX</code><br> </blockquote> un punto importante a tratar es el orden en que se evalúan los operandos. el orden es * -> / -> + -> - , de la misma forma en que los evalúa un humano.<br>  otro punto, aun mas importante es que NO ESTAN PERMITIDOS LOS PARENTESIS de ningún tipo, por lo que se debe reorganizar la ecuación o  definir el paréntesis como otra variable<br>  Por ultimo recuerda NUNCA escribir partir la ecuación con un negativo cuando solo hay uno en toda la ecuación, por ej: <code>-x + y</code>,  en este caso es preferible <code>y - x</code> </p> </body> </html>")
		self.PROMEDIO = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Variable PROMEDIO</h2> <p> Los parámetros que recibe son de la forma: <blockquote><code>X [, Y[, ...]]</code></blockquote> donde x e y pueden ser Variables, Evaluaciones, enteros o decimales. a continuación algunos ejemplos: <blockquote> <code>C1,C2,C3</code><br> <code>Lab1 , Lab2</code><br> <code>T1, -T2</code><br> </blockquote> Tan fácil como ves </p> </body> </html>")
		self.CONDICIONAL = QtCore.QString("<!DOCTYPE html> <html> <body> <h2>Variable CONDICIONAL</h2> <p> Los parámetros que recibe tiene son de la forma: <blockquote><code> condicion [&amp; [ condicion]] : valor [, ...][; valor_por_defecto]<br><br> condicion:<br>{ X(espacio){ >|>=|&lt;|&lt;=|==|=|!= }(espacio)Y }  </code></blockquote> donde X e Y pueden ser Variables, Evaluaciones, enteros o decimales, siendo ambas (X e Y) las 'variables' comparadas<br>  Si el valor por defecto no es especificado, se asume 0<br>  a continuación algunos ejemplos: <blockquote> <code>NS &lt;= 55:0;NS</code> (reprobación absoluta)<br> <code>NS >= 44 &amp; NS &lt; 55: NFG; NS</code> (nota con global)<br> <code>X &lt; Y: X, X > Y: Y, X == Y: X  </code> ( mínimo de X e Y )<br> <code>X &lt; Y: X; Y </code> ( mínimo de X e Y (compacto))<br> </blockquote> </p> </body> </html>")
		self.about = QtCore.QString("<!DOCTYPE html> <html> <body style='text-align:center;'> <h2>Promedieitor</h2> <h4>Version 0.9.5</h4> <p> Promedieitor es una aplicación gratuita, desarrollada en Python y Qt, con el propósito de  facilitar el cálculo de notas. </p> <p> <h4>Créditos</h4> Gerardo Zúñiga (MonodetH) con la colaboración de Nicolás Curapil (NikoStolich) </p> <p> <h5>Se puede seguir el proyecto en:</h5> <a href='https://github.com/MonodetH/Promedieitor'>https://github.com/MonodetH/Promedieitor</a> </p> </body> </html>")
		
		if self.categoria == "generalGeneral":
			self.ventana.textEdit.setHtml(self.generalGeneral)
		elif self.categoria == "evaluaciones":
			self.ventana.textEdit.setHtml(self.evaluaciones)
		elif self.categoria == "generalVariables":
			self.ventana.textEdit.setHtml(self.generalVariables)
		elif self.categoria == "NF":
			self.ventana.textEdit.setHtml(self.NF)
		elif self.categoria == "generalTipos":
			self.ventana.textEdit.setHtml(self.generalTipos)
		elif self.categoria == "ALGEBRAICA":
			self.ventana.textEdit.setHtml(self.ALGEBRAICA)
		elif self.categoria == "PROMEDIO":
			self.ventana.textEdit.setHtml(self.PROMEDIO)
		elif self.categoria == "CONDICIONAL":
			self.ventana.textEdit.setHtml(self.CONDICIONAL)
		elif self.categoria == "about":
			self.ventana.textEdit.setHtml(self.about)
